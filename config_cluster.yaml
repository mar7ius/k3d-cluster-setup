kind: Simple
apiVersion: k3d.io/v1alpha4
metadata:
  name: dev
image: rancher/k3s:v1.22.6-k3s1
servers: 1
agents: 2
kubeAPI:
  hostIP: 192.168.1.15
  hostPort: "6443"
network: traefik_network
ports:
- port: 80:80
  nodeFilters:
  - loadbalancer
- port: 443:443
  nodeFilters:
  - loadbalancer
options:
  k3d: # k3d runtime settings
    wait: true # wait for cluster to be usable before returining; same as `--wait` (default: true)
    timeout: "6m0s" # wait timeout before aborting; same as `--timeout 60s`
    disableLoadbalancer: false # same as `--no-lb`
    disableImageVolume: false # same as `--no-image-volume`
    disableRollback: false # same as `--no-Rollback`
  k3s:
    extraArgs:
      - arg: --tls-san=127.0.0.1
        nodeFilters:
          - server:*
      - arg: --tls-san=192.168.1.15
        nodeFilters:
          - server:*
      - arg: --disable=traefik
        nodeFilters:
          - server:*

volumes: # repeatable flags are represented as YAML lists
  - volume: /k3d/storage:/var/lib/rancher/k3s/storage # same as `--volume '/my/host/path:/path/in/node@server:0;agent:*'`
    nodeFilters:
      - all
  - volume: /data/docker/kubernetes/traefik:/etc/traefik # same as `--volume '/my/host/path:/path/in/node@server:0;agent:*'`
    nodeFilters:
      - all
  - volume: /data/docker/kubernetes/k3d/manifests:/var/lib/rancher/k3s/server/manifests # same as `--volume '/my/host/path:/path/in/node@server:0;agent:*'`
    nodeFilters:
      - server:0
